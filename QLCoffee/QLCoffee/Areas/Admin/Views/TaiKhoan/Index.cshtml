@using PagedList
@using PagedList.Mvc

@model PagedList.IPagedList<QLCoffee.Models.TAIKHOAN>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    int i = (Model.PageNumber - 1) * Model.PageSize + 1;
}

<h2 class="text-center my-4">DANH SÁCH TÀI KHOẢN</h2>

<p class="text-start">
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
</p>

<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Tìm kiếm..."/>
        <button type="submit" class="btn btn-primary">Tìm kiếm</button>
    </div>

</form>

<table class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr>
            <th>
                STT
            </th>
            <th>
                Tên đăng nhập
            </th>
            <th>
                Email
            </th>
            <th>
                Mật khẩu
            </th>
            <th>
                Phân quyền
            </th>
            <th>
                Mã khách hàng
            </th>
            <th>
                Mã nhân viên
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>


        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @i
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TenDN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MatKhau)
                </td>
                <td>
                    @if (item.PhanQuyen == "A")
                    {
                        @: Admin
                    }
                    else
                    {
                        @: Customer
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaKH)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaNV)
                </td>

                <td class="text-center">
                    <div class="d-flex justify-content-center">
                        @Html.ActionLink("Edit", "Edit", new { id = item.TenDN }, new { @class = "btn btn-sm btn-primary" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.TenDN, }, new { @class = "btn btn-sm btn-dark" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.TenDN }, new { @class = "btn btn-sm btn-danger" })
                    </div>
                </td>               
            </tr>
            i++;
        }
    </tbody>
</table>

    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { searchString = Request.QueryString["searchString"], page }),
            new PagedListRenderOptions
            {
                Display = PagedListDisplayMode.IfNeeded,
                UlElementClasses = new[] { "pagination", "pagination-sm" }, // Nhỏ gọn
                LiElementClasses = new[] { "page-item" }

            })
    </div>


<script>
    $(document).ready(function () {
        $(".pagination li a").addClass("page-link");
    });
</script>

